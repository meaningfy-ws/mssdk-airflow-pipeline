services:
  traefik:
    extends:
      file: traefik/docker-compose.yml
      service: traefik
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${ENVIRONMENT}.${DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"

  postgres:
    extends:
      file: airflow/docker-compose.yaml
      service: postgres
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_USER}

  redis:
    extends:
      file: airflow/docker-compose.yaml
      service: redis
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-redis

  airflow-webserver:
    extends:
      file: airflow/docker-compose.yaml
      service: airflow-webserver
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-airflow-webserver
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.airflow.rule=Host(`airflow.${ENVIRONMENT}.${DOMAIN}`)"
      - "traefik.http.routers.airflow.entrypoints=web"
      - "traefik.http.services.airflow.loadbalancer.server.port=${AIRFLOW_PORT}"
    depends_on:
      - traefik

  airflow-scheduler:
    extends:
      file: airflow/docker-compose.yaml
      service: airflow-scheduler
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-airflow-scheduler

  airflow-worker:
    extends:
      file: airflow/docker-compose.yaml
      service: airflow-worker
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-airflow-worker

  airflow-triggerer:
    extends:
      file: airflow/docker-compose.yaml
      service: airflow-triggerer
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-airflow-triggerer

  airflow-init:
    extends:
      file: airflow/docker-compose.yaml
      service: airflow-init
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-airflow-init

  airflow-cli:
    extends:
      file: airflow/docker-compose.yaml
      service: airflow-cli
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-airflow-cli

  flower:
    extends:
      file: airflow/docker-compose.yaml
      service: flower
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-flower

  otel-collector:
    extends:
      file: open-telemetry/docker-compose.yaml
      service: otel-collector
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-otel-collector
    depends_on:
      - tempo
      - prometheus

  tempo:
    extends:
      file: grafana/docker-compose.yaml
      service: tempo
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-tempo

  grafana:
    extends:
      file: grafana/docker-compose.yaml
      service: grafana
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${ENVIRONMENT}.${DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=${GRAFANA_PORT}"
    depends_on:
      - traefik

  prometheus:
    extends:
      file: grafana/docker-compose.yaml
      service: prometheus
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-prometheus

  marquez:
    extends:
      file: marquez/docker-compose.yaml
      service: marquez
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-marquez

  marquez-web:
    extends:
      file: marquez/docker-compose.yaml
      service: marquez-web
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-marquez-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.marquez-web.rule=Host(`marquez.${ENVIRONMENT}.${DOMAIN}`)"
      - "traefik.http.routers.marquez-web.entrypoints=web"
      - "traefik.http.services.marquez-web.loadbalancer.server.port=${MARQUEZ_WEB_PORT}"
    depends_on:
      - traefik

  marquez-postgres:
    extends:
      file: marquez/docker-compose.yaml
      service: marquez-postgres
    container_name: ${ENVIRONMENT}-${SUBDOMAIN}-marquez-postgres

volumes:
  postgres-db-volume:
  tempo-data:
  prometheus-data:
  redis-data:
  marquez-data:
  marquez-postgres-data:

networks:
  mssdk-network:
    driver: bridge